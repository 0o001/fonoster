version: '3.7'
services:
  sipproxy:
    env_file: .env
    image: fonoster/routr:1.0.0-rc4
    environment:
      ROUTR_EXTERN_ADDR: ${HOST_ADDR}
      ROUTR_DS_PROVIDER: redis_data_provider
      ROUTR_DS_PARAMETERS: host=${DS_HOST},port=${DS_PORT}
    expose:
      - ${SIPPROXY_API_PORT}
      - ${SIPPROXY_SIP_PORT}
    ports:
      - ${SIPPROXY_SIP_PORT}:${SIPPROXY_SIP_PORT}
    volumes:
      - ./etc/log4j2.yml:/opt/routr/config/log4j2.yml:ro
  mediaserver:
    env_file: .env
    entrypoint: sh -c './run.sh'
    environment:
      MS_EXTERN_ADDR: ${HOST_ADDR}
      MS_AGI_URL: agi://${MC_HOST}
      MS_SIP_BINDADDR: 0.0.0.0:${MS_SIP_PORT}
      MS_SIPPROXY_HOST: ${SIPPROXY_HOST}
      MS_SIPPROXY_USERNAME: ${SIPPROXY_USERNAME}
      MS_SIPPROXY_SECRET: ${SIPPROXY_SECRET}
    image: yaps/mediaserver
    build:
      context: mediaserver
    expose:
      - ${MS_SIP_PORT}
  mediacontroller:
    env_file: .env
    image: yaps/mediacontroller
    environment:
      MC_AGI_PORT: ${MC_AGI_PORT}
      MC_APP_ENTRYPOINT: '/hello-world/index.js'
    build:
      context: mediacontroller
    entrypoint: sh -c 'sh ./run.sh'
    volumes:
      - ./functions:/functions:ro
    expose:
      - ${MC_AGI_PORT}
  datasource:
    env_file: .env
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    expose:
      - ${DS_PORT}
  provisioner:
    env_file: .env
    build:
      context: .rctl
    entrypoint: |
      sh -c '
        while ! nc -z $SIPPROXY_HOST ${SIPPROXY_API_PORT}; do sleep 0.1; done
        rctl login https://${SIPPROXY_HOST}:${SIPPROXY_API_PORT}/api/v1beta1 \
          -u ${SIPPROXY_API_USERNAME} -p ${SIPPROXY_API_SECRET}
        rctl create -f /etc/bootstrap.yml
        #while sleep 3600; do :; done
      '
    volumes:
      - ./etc/bootstrap.yml:/etc/bootstrap.yml:ro
