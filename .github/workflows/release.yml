name: release
on:
  push:
    paths:
    - 'mods/**'
    branches:
    - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(node -e "console.log(require('./lerna.json').version)")
    - run: |
        npm config set unsafe-perm true
        npm install lerna -g
        npm install
        npm run bootstrap
        npm run build
    - name: Login Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Copy and Push Traefik image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/traefik:v2.4
        dst: |
          docker.io/fonoster/traefik:${{ steps.get_version.outputs.VERSION }}
    - name: Publish to Docker Hub the Fonoster installer
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        FONOSTER_VERSION: ${{ steps.get_version.outputs.VERSION }}
        BRANCH: main
      with:
        name: fonoster/fonoster
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
        buildargs: FONOSTER_VERSION,BRANCH
    - name: Publish Traefik image to Docker Hub
      uses: tinact/docker.image-retag@master
      with:
        image_name: traefik
        image_old_tag: v2.4
        image_new_tag: ${{ steps.get_version.outputs.VERSION }}
        registry_username: ${{ secrets.DOCKER_HUB_USERNAME }}
        registry_password: ${{ secrets.DOCKER_HUB_PASSWORD }}        
    - name: Publish to Docker Hub the Projects API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/projects
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/projects
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Users API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/users
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/users
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Secrets API 
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/secrets
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/secrets
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Funcs API 
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/funcs
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/funcs
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Agents API 
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/agents
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/agents
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Domains API 
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/domains
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/domains
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Numbers API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/numbers
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/numbers
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Providers API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/providers
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/providers
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Storage API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/storage
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/storage
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the CallManager API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/callmanager
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/callmanager
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Auth API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/auth
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/auth
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publishing MediaServer Service
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/mediaserver
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    - name: Publishing RTPEngine Service
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/rtpengine
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    - name: Publishing JWTHelper Service
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/jwt-helper
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    - name: Publishing OAuth2 Service
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/oauth2
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    - name: Publishing GRPC Gateway
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/grpc-gateway
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'          

