/**
 * MIT License
 * Copyright (c) 2021 Fonoster Inc
 *
 * The Users proto contains the artificats for the administration
 * of Users.
 */
syntax = "proto3";

package fonos.users.v1beta1;

option go_package = "github.com/fonoster/fonos/mods/users/fonos/services/protos/users";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "common.proto";

service Projects {
  // Lists all the Projects for a given User
  rpc ListProjects (ListProjectsRequest) returns (ListProjectsResponse) {
    option (google.api.http) = { get: "/v1beta1/projects" };
  };  
  // Creates a new Project resource
  rpc CreateProject (CreateProjectRequest) returns (Project) {
    option (google.api.http) = { 
      post: "/v1beta1/projects"
      body: "*"
    };
  };
  // Create and store a new key
  rpc CreateProjectKey (CreateProjectKeyRequest) returns (CreateProjectKeyResponse) {
    option (google.api.http) = { 
      post: "/v1beta1/projects/{ref}/key"
      body: "*"
    };
  };
  // Updates a project
  rpc UpdateProject (UpdateProjectRequest) returns (Project) {
    option (google.api.http) = { 
      put: "/v1beta1projects"
      body: "*" 
    };
  };
  // WARNING: Hard delete of an User will remove all related projects and its resources. 
  rpc DeleteProject (DeleteProjectRequest) returns (fonos.common.v1beta1.Empty) {
    option (google.api.http) = { 
      delete: "/v1beta1/projects/{ref}"
    };
  };
  // WARNING: Hard delete of an User will remove all related projects and its resources. 
  rpc DeleteProjectKey (DeleteProjectKeyRequest) returns (fonos.common.v1beta1.Empty) {
    option (google.api.http) = { 
      delete: "/v1beta1/projects/${ref}/key"
    };
  };
}

message ListProjectsRequest {
  string email = 1;
}

message ListProjectsResponse {
  repeated Project projects = 1;
}

message CreateProjectRequest {
  string name = 1;
  string allow_experiments = 2;
}

message UpdateProjectRequest {
  string name = 1;
  string allow_experiments = 2;
}

message CreateProjectKeyRequest {
  string ref = 1;
  string expiration = 2;
}

message CreateProjectKeyResponse {
  string key = 1;
}

message Project {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"ref\": \"507f191e810c19729de860ea\", \"name\": \"Acme Main\", \"allowExperiments\": false, \"keys\": [\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"]}"
  };  
  string ref = 1;
  string name = 2 [(google.api.field_behavior) = REQUIRED];
  bool allow_experiments = 3;
  repeated string key = 4;
}
