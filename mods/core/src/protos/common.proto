/**
 * MIT License
 * Copyright (c) 2021 Fonoster Inc
 *
 * This proto stores common messages for the fonos platform.
 */
syntax = "proto3";

package fonos.common.v1beta1;

option go_package = "github.com/grpc-ecosystem/grpc-gateway/v2/examples/internal/proto/examplepb";
option go_package = "github.com/fonoster/fonos/gen/go/core/common/v1beta1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message Error {}

message Empty {}

enum View {
  BASIC = 0;
  STANDARD = 1;
  FULL = 2;
}

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Project Fonos";
		version: "0.1";
		contact: {
			name: "Fonoster OSS";
			url: "https://fonoster.com";
			email: "psanders@fonoster.com";
		};
		license: {
			name: "MIT License";
			url: "https://raw.githubusercontent.com/fonoster/fonos/main/LICENSE";
		};
	};
	// Overwriting host entry breaks tests, so this is not done here.
	external_docs: {
		url: "https://github.com/fonoster/fonos";
		description: "Github Repo";
	}
	schemes: HTTP;
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
		security: {
			key: "AccessKeyId";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
				name: "access_key_id";
			}
		}
    security: {
			key: "AccessKeySecret";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
        name: "access_key_secret";
			}
		}
	}
	security: {
		security_requirement: {
			key: "AccessKeyId";
			value: {};
		}
    security_requirement: {
			key: "AccessKeySecret";
			value: {};
		}
	}
	responses: {
		key: "403";
		value: {
			description: "Returned when the user does not have permission to access the resource.";
		}
	}
	responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
	}
};
