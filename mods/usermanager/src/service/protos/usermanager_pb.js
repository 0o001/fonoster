// source: usermanager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var common_pb = require("./common_pb.js");
goog.object.extend(proto, common_pb);
goog.exportSymbol(
  "proto.fonos.usermanager.v1alpha1.CreateUserRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.fonos.usermanager.v1alpha1.DeleteUserRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.fonos.usermanager.v1alpha1.GetUserRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.fonos.usermanager.v1alpha1.ListUsersRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.fonos.usermanager.v1alpha1.ListUsersResponse",
  null,
  global
);
goog.exportSymbol(
  "proto.fonos.usermanager.v1alpha1.UpdateUserRequest",
  null,
  global
);
goog.exportSymbol("proto.fonos.usermanager.v1alpha1.User", null, global);
goog.exportSymbol("proto.fonos.usermanager.v1alpha1.User.Status", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.usermanager.v1alpha1.ListUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.ListUsersRequest.displayName =
    "proto.fonos.usermanager.v1alpha1.ListUsersRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.fonos.usermanager.v1alpha1.ListUsersResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.fonos.usermanager.v1alpha1.ListUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.ListUsersResponse.displayName =
    "proto.fonos.usermanager.v1alpha1.ListUsersResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.usermanager.v1alpha1.GetUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.GetUserRequest.displayName =
    "proto.fonos.usermanager.v1alpha1.GetUserRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.usermanager.v1alpha1.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.CreateUserRequest.displayName =
    "proto.fonos.usermanager.v1alpha1.CreateUserRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.usermanager.v1alpha1.UpdateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.UpdateUserRequest.displayName =
    "proto.fonos.usermanager.v1alpha1.UpdateUserRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.usermanager.v1alpha1.DeleteUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.DeleteUserRequest.displayName =
    "proto.fonos.usermanager.v1alpha1.DeleteUserRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonos.usermanager.v1alpha1.User = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonos.usermanager.v1alpha1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonos.usermanager.v1alpha1.User.displayName =
    "proto.fonos.usermanager.v1alpha1.User";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.ListUsersRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.ListUsersRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.ListUsersRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
        pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
        view: jspb.Message.getFieldWithDefault(msg, 3, 0)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersRequest}
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.ListUsersRequest();
  return proto.fonos.usermanager.v1alpha1.ListUsersRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.ListUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersRequest}
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPageSize(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPageToken(value);
        break;
      case 3:
        var value = /** @type {!proto.fonos.common.v1alpha1.View} */ (reader.readEnum());
        msg.setView(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.ListUsersRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.ListUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
};

/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.getPageSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.setPageSize = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.getPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.setPageToken = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional fonos.common.v1alpha1.View view = 3;
 * @return {!proto.fonos.common.v1alpha1.View}
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.getView = function () {
  return /** @type {!proto.fonos.common.v1alpha1.View} */ (jspb.Message.getFieldWithDefault(
    this,
    3,
    0
  ));
};

/**
 * @param {!proto.fonos.common.v1alpha1.View} value
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.ListUsersRequest.prototype.setView = function (
  value
) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.ListUsersResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.ListUsersResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.ListUsersResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        usersList: jspb.Message.toObjectList(
          msg.getUsersList(),
          proto.fonos.usermanager.v1alpha1.User.toObject,
          includeInstance
        ),
        nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersResponse}
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.ListUsersResponse();
  return proto.fonos.usermanager.v1alpha1.ListUsersResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.ListUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersResponse}
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.fonos.usermanager.v1alpha1.User();
        reader.readMessage(
          value,
          proto.fonos.usermanager.v1alpha1.User.deserializeBinaryFromReader
        );
        msg.addUsers(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setNextPageToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.ListUsersResponse.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.ListUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fonos.usermanager.v1alpha1.User.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * repeated User users = 1;
 * @return {!Array<!proto.fonos.usermanager.v1alpha1.User>}
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.getUsersList = function () {
  return /** @type{!Array<!proto.fonos.usermanager.v1alpha1.User>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.fonos.usermanager.v1alpha1.User,
    1
  ));
};

/**
 * @param {!Array<!proto.fonos.usermanager.v1alpha1.User>} value
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersResponse} returns this
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.setUsersList = function (
  value
) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.fonos.usermanager.v1alpha1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonos.usermanager.v1alpha1.User}
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.addUsers = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.fonos.usermanager.v1alpha1.User,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersResponse} returns this
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.clearUsersList = function () {
  return this.setUsersList([]);
};

/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.getNextPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.ListUsersResponse} returns this
 */
proto.fonos.usermanager.v1alpha1.ListUsersResponse.prototype.setNextPageToken = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.GetUserRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.GetUserRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.GetUserRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.GetUserRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        email: jspb.Message.getFieldWithDefault(msg, 1, ""),
        view: jspb.Message.getFieldWithDefault(msg, 2, 0)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.GetUserRequest}
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.GetUserRequest();
  return proto.fonos.usermanager.v1alpha1.GetUserRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.GetUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.GetUserRequest}
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      case 2:
        var value = /** @type {!proto.fonos.common.v1alpha1.View} */ (reader.readEnum());
        msg.setView(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.GetUserRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.GetUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.GetUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.prototype.setEmail = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional fonos.common.v1alpha1.View view = 2;
 * @return {!proto.fonos.common.v1alpha1.View}
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.prototype.getView = function () {
  return /** @type {!proto.fonos.common.v1alpha1.View} */ (jspb.Message.getFieldWithDefault(
    this,
    2,
    0
  ));
};

/**
 * @param {!proto.fonos.common.v1alpha1.View} value
 * @return {!proto.fonos.usermanager.v1alpha1.GetUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.GetUserRequest.prototype.setView = function (
  value
) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.CreateUserRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.CreateUserRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.CreateUserRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.CreateUserRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        user:
          (f = msg.getUser()) &&
          proto.fonos.usermanager.v1alpha1.User.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.CreateUserRequest}
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.CreateUserRequest();
  return proto.fonos.usermanager.v1alpha1.CreateUserRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.CreateUserRequest}
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = new proto.fonos.usermanager.v1alpha1.User();
        reader.readMessage(
          value,
          proto.fonos.usermanager.v1alpha1.User.deserializeBinaryFromReader
        );
        msg.setUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.CreateUserRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fonos.usermanager.v1alpha1.User.serializeBinaryToWriter
    );
  }
};

/**
 * optional User user = 2;
 * @return {?proto.fonos.usermanager.v1alpha1.User}
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.prototype.getUser = function () {
  return /** @type{?proto.fonos.usermanager.v1alpha1.User} */ (jspb.Message.getWrapperField(
    this,
    proto.fonos.usermanager.v1alpha1.User,
    2
  ));
};

/**
 * @param {?proto.fonos.usermanager.v1alpha1.User|undefined} value
 * @return {!proto.fonos.usermanager.v1alpha1.CreateUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.prototype.setUser = function (
  value
) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fonos.usermanager.v1alpha1.CreateUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.prototype.clearUser = function () {
  return this.setUser(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonos.usermanager.v1alpha1.CreateUserRequest.prototype.hasUser = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.UpdateUserRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.UpdateUserRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.UpdateUserRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        user:
          (f = msg.getUser()) &&
          proto.fonos.usermanager.v1alpha1.User.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest}
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.UpdateUserRequest();
  return proto.fonos.usermanager.v1alpha1.UpdateUserRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest}
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = new proto.fonos.usermanager.v1alpha1.User();
        reader.readMessage(
          value,
          proto.fonos.usermanager.v1alpha1.User.deserializeBinaryFromReader
        );
        msg.setUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.UpdateUserRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fonos.usermanager.v1alpha1.User.serializeBinaryToWriter
    );
  }
};

/**
 * optional User user = 2;
 * @return {?proto.fonos.usermanager.v1alpha1.User}
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.prototype.getUser = function () {
  return /** @type{?proto.fonos.usermanager.v1alpha1.User} */ (jspb.Message.getWrapperField(
    this,
    proto.fonos.usermanager.v1alpha1.User,
    2
  ));
};

/**
 * @param {?proto.fonos.usermanager.v1alpha1.User|undefined} value
 * @return {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.prototype.setUser = function (
  value
) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fonos.usermanager.v1alpha1.UpdateUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.prototype.clearUser = function () {
  return this.setUser(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonos.usermanager.v1alpha1.UpdateUserRequest.prototype.hasUser = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.DeleteUserRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.DeleteUserRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.DeleteUserRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.DeleteUserRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        email: jspb.Message.getFieldWithDefault(msg, 1, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.DeleteUserRequest}
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.DeleteUserRequest();
  return proto.fonos.usermanager.v1alpha1.DeleteUserRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.DeleteUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.DeleteUserRequest}
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.DeleteUserRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.DeleteUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.DeleteUserRequest} returns this
 */
proto.fonos.usermanager.v1alpha1.DeleteUserRequest.prototype.setEmail = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.fonos.usermanager.v1alpha1.User.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.fonos.usermanager.v1alpha1.User.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.fonos.usermanager.v1alpha1.User} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.fonos.usermanager.v1alpha1.User.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
        lastName: jspb.Message.getFieldWithDefault(msg, 2, ""),
        email: jspb.Message.getFieldWithDefault(msg, 3, ""),
        accessKeyId: jspb.Message.getFieldWithDefault(msg, 4, ""),
        role: jspb.Message.getFieldWithDefault(msg, 5, ""),
        createTime: jspb.Message.getFieldWithDefault(msg, 6, ""),
        updateTime: jspb.Message.getFieldWithDefault(msg, 7, ""),
        status: jspb.Message.getFieldWithDefault(msg, 8, 0),
        labelsMap: (f = msg.getLabelsMap())
          ? f.toObject(includeInstance, undefined)
          : []
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonos.usermanager.v1alpha1.User}
 */
proto.fonos.usermanager.v1alpha1.User.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonos.usermanager.v1alpha1.User();
  return proto.fonos.usermanager.v1alpha1.User.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonos.usermanager.v1alpha1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonos.usermanager.v1alpha1.User}
 */
proto.fonos.usermanager.v1alpha1.User.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setFirstName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setLastName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccessKeyId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setRole(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreateTime(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdateTime(value);
        break;
      case 8:
        var value = /** @type {!proto.fonos.usermanager.v1alpha1.User.Status} */ (reader.readEnum());
        msg.setStatus(value);
        break;
      case 9:
        var value = msg.getLabelsMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readString,
            null,
            "",
            ""
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.fonos.usermanager.v1alpha1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonos.usermanager.v1alpha1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonos.usermanager.v1alpha1.User.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAccessKeyId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getCreateTime();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getUpdateTime();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(8, f);
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      9,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    );
  }
};

/**
 * @enum {number}
 */
proto.fonos.usermanager.v1alpha1.User.Status = {
  DELETED: 0,
  ACTIVE: 1,
  SUSPENDED: 2
};

/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getFirstName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setFirstName = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string last_name = 2;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getLastName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setLastName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string email = 3;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setEmail = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string access_key_id = 4;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getAccessKeyId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setAccessKeyId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string role = 5;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getRole = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setRole = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string create_time = 6;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getCreateTime = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setCreateTime = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string update_time = 7;
 * @return {string}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getUpdateTime = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};

/**
 * @param {string} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setUpdateTime = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional Status status = 8;
 * @return {!proto.fonos.usermanager.v1alpha1.User.Status}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getStatus = function () {
  return /** @type {!proto.fonos.usermanager.v1alpha1.User.Status} */ (jspb.Message.getFieldWithDefault(
    this,
    8,
    0
  ));
};

/**
 * @param {!proto.fonos.usermanager.v1alpha1.User.Status} value
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.setStatus = function (value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};

/**
 * map<string, string> labels = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.fonos.usermanager.v1alpha1.User.prototype.getLabelsMap = function (
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(
    this,
    9,
    opt_noLazyCreate,
    null
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.fonos.usermanager.v1alpha1.User} returns this
 */
proto.fonos.usermanager.v1alpha1.User.prototype.clearLabelsMap = function () {
  this.getLabelsMap().clear();
  return this;
};

goog.object.extend(exports, proto.fonos.usermanager.v1alpha1);
