apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include ".helm2.fullname" . }}-env
  namespace: {{ .Release.Namespace }}
data:
  EXTERN_ADDR: {{ .Values.externAddr | quote }}
  MS_ENDPOINT: sip:ast@sip.local
  AGI_URL: agi://{{ include ".helm2.fullname" . }}-mediacontroller
  MS_SIP_PORT: "6060"
  MC_HOST: {{ include ".helm2.fullname" . }}-mediacontroller
  MC_AGI_PORT: "4573"
  DS_HOST: {{ include ".helm2.fullname" . }}-redis-master
  DS_PORT: "6379"
  FS_HOST: {{ include ".helm2.fullname" . }}-minio
  FS_PORT: "9000"
  FS_USERNAME: minio
  FS_SECRET: minio123
  FS_DEFAULT_STORAGE_BUCKET: default
  TTS_ENGINE_HOST: {{ include ".helm2.fullname" . }}-ttsengine
  TTS_ENGINE_PORT: "59125"
  TTS_BASE_URI: /tts
  SIPPROXY_API_PORT: "4567"
  SIPPROXY_SIP_PORT: "5060"
  # Asterisk will not send outbound registration in K8s unless it has a FQDN
  # As a workaround we simply use the POD's FQND
  SIPPROXY_HOST: {{ include ".helm2.fullname" . }}-sipproxy.{{ .Release.Namespace }}.svc.cluster.local
  SIPPROXY_USERNAME: ast
  SIPPROXY_SECRET: changeit
  SIPPROXY_API_USERNAME: admin
  SIPPROXY_API_SECRET: changeit
  DATA_SOURCE_PROVIDER: redis_data_provider
  DATA_SOURCE_PARAMETERS: host={{ include ".helm2.fullname" . }}-redis-master,port=6379
  APISERVER_ENDPOINT: "{{ include ".helm2.fullname" . }}-apiserver:50052"
  
  # Etc envs

  REGISTRAR_INTF: Internal
  ENABLE_TEST_ACCOUNT: "true"
  CERTS_PATH: /certs
  NODE_ENV: dev
  COMPOSE_PROJECT_NAME: fonos
  COMPOSE_PROJECT_VERSION: "0.0.4"
  AS_IMAGE: fonoster/fonos-apiserver:latest
  MC_IMAGE: fonoster/fonos-nodejsmc:latest
  MS_IMAGE: fonoster/fonos-mediaserver:15.7.4
  TTS_IMAGE: synesthesiam/marytts:5.2
  SIPPROXY_IMAGE: fonoster/routr:1.0.0-rc5
  LOGS_MONITOR_IMAGE: kibana:7.2.0
  LOGS_AGGREGATOR_IMAGE: docker.elastic.co/elasticsearch/elasticsearch:7.2.0  
  LOG_OPT_TAG_PREFIX: alpha
  LOGS_DRIVER_HOST: logsdriver
  LOGS_DRIVER_PORT: "24224"
  LOGS_AGGREGRATOR_PORT: "9200"
  LOGS_MONITOR_PORT: "5601"  