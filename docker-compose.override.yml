# NOTICE: This is here for testing convinience You should not use this
# in production as it has many unneeded open ports and the display of
# credentials.

version: '3.7'
services:

  provisioner:
    env_file: .env
    build:
      context: .rctl
    entrypoint: |
      sh -c '
        while ! nc -z $SIPPROXY_HOST ${SIPPROXY_API_PORT}; do sleep 0.1; done
        rctl login https://${SIPPROXY_HOST}:${SIPPROXY_API_PORT}/api/v1beta1 \
          -u ${SIPPROXY_API_USERNAME} -p ${SIPPROXY_API_SECRET}
        rctl create -f /etc/bootstrap.yml
      '
    volumes:
      - ./etc/bootstrap.yml:/etc/bootstrap.yml:ro

  apiserver:
    logging:
      driver: json-file
    volumes:
      - credentials:/root/.yaps

  sipproxy:
    logging:
      driver: json-file
    volumes:
      - ./etc/log4j2.yml:/opt/routr/config/log4j2.yml
    ports:
      - ${SIPPROXY_SIP_PORT}:${SIPPROXY_SIP_PORT}
      - ${SIPPROXY_API_PORT}:${SIPPROXY_API_PORT}

  mediaserver:
    logging:
      driver: json-file
    ports:
      - ${MS_SIP_PORT}:${MS_SIP_PORT}

  mediacontroller:
    logging:
      driver: json-file
    volumes:
      - credentials:/root/.yaps:ro

  datasource:
    logging:
      driver: json-file
    volumes:
      - datasource:/data
    ports:
      - ${DS_PORT}:${DS_PORT}

  fs:
    logging:
      driver: json-file
    ports:
      - ${FS_PORT}:${FS_PORT}

  tts:
    logging:
      driver: json-file
    ports:
      - ${TTS_ENGINE_PORT}:${TTS_ENGINE_PORT}

  integrationtests:
    env_file: .env
    image: integrationtests
    build:
      context: mods
      dockerfile: Dockerfile.mc
    environment:
      YAPS_ENDPOINT: ${APISERVER_ENDPOINT}
    entrypoint: |
      sh -c '
        #while [ ! -f /root/.yaps/access ]; do sleep 2; done
        npm i nyc mocha -g
        cd /mods
        npm test
      '
    volumes:
      - credentials:/root/.yaps:ro

volumes:
  data1-1:
  credentials:
  datasource:
