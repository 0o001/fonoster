version: '3.7'
services:

  apiserver:
    extends:
      file: common.yml
      service: common 
    image: ${AS_IMAGE}
    entrypoint: |
      sh -c '
        while [ ! -f ~/.fonos/config ]; do echo 'wating-for-config'; sleep .5; done
        sleep 5
        run-apiserver
      '
    environment:
      DS_HOST: ${DS_HOST}
      DS_PORT: ${DS_PORT}
    expose:
      - ${AS_PORT}
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.apiserver
    networks:
      fonos:
        aliases:
          - apiserver.fonos
    volumes:
      - config:/root/.fonos

  datasource:
    extends:
      file: common.yml
      service: common 
    image: ${DS_IMAGE}
    command: ["redis-server", "--appendonly", "yes"]
    expose:
      - ${DS_PORT}
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.datasource
    networks:
      fonos:
        aliases:
          - datasource.fonos
    volumes:
      - datasource:/data

# By default this config uses default local driver,
# For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  datasource:
  config:

# Custom network so all services can communicate using a FQDN
networks:
  fonos: