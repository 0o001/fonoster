# Required dependencies

version: '3.7'

networks:
  fonos:

volumes:
  datasource:
    external: true
  datasource_auth:
    external: true
  data1-1:
    external: true

services:

  apiserver:
    image: ${AS_IMAGE}
    command: --api.insecure=true --providers.docker
    ports:
      - ${AS_PORT}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      fonos:

  datasource:
    image: ${DS_IMAGE} 
    restart: ${RESTART_POLICY}
    command: ['redis-server', '/etc/redis/redis.conf' ]
    healthcheck:
      test: ['CMD', 'redis-cli','ping']
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.datasource
    networks:
      fonos:
        aliases: 
          - ${DS_HOST}
    volumes: 
      - ${CONFIG}/redis.conf:/etc/redis/redis.conf
      - datasource:/data

  fs:
    image: ${FS_IMAGE}
    restart: ${RESTART_POLICY}
    command: minio server /fonos
    volumes:
      - data1-1:/fonos
    environment:
      MINIO_ACCESS_KEY: ${FS_USERNAME}
      MINIO_SECRET_KEY: ${FS_SECRET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.fs
    networks:
      fonos:
        aliases:
          - ${FS_HOST}
