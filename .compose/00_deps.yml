version: '3.7'

services:

  reverse_proxy:
    image: traefik:v2.4
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      fonos:

  datasource:
    image: ${DS_IMAGE} 
    restart: ${RESTART_POLICY}
    command: ['redis-server', '/etc/redis/redis.conf' ]
    healthcheck:
      test: ['CMD', 'redis-cli','ping']
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.datasource
    networks:
      fonos:
        aliases: 
          - ${DS_HOST}
    volumes: 
      - ${CONFIG}/redis.conf:/etc/redis/redis.conf
      - datasource:/data

  datasource_auth:
    image: ${DS_AUTH_IMAGE}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DS_AUTH_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DS_AUTH_SECRET}
      MONGO_INITDB_DATABASE: ${DS_AUTH_DB}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.datasource_auth
    networks:
      fonos:
        aliases: 
          - ${DS_AUTH_HOST}
    volumes: 
      - ${CONFIG}/init_mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - datasource:/data

  eventsbroker:
    image: ${EB_IMAGE}
    restart: ${RESTART_POLICY}
    environment:
      RABBITMQ_USERNAME: ${EB_USERNAME}
      RABBITMQ_PASSWORD: ${EB_SECRET}
      RABBITMQ_NODE_PORT_NUMBER: ${EB_PORT}
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.eventsbroker
    networks:
      fonos:
        aliases: 
          - ${EB_HOST}

  fs:
    image: ${FS_IMAGE}
    restart: ${RESTART_POLICY}
    command: minio server /fonos
    volumes:
      - data1-1:/fonos
    environment:
      MINIO_ACCESS_KEY: ${FS_USERNAME}
      MINIO_SECRET_KEY: ${FS_SECRET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      options:
        tag: ${LOG_OPT_TAG_PREFIX}.${COMPOSE_PROJECT_NAME}.fs
    networks:
      fonos:
        aliases:
          - ${FS_HOST}

networks:
  fonos:

volumes:
  datasource:
    external: true
  datasource_auth:
    external: true
  data1-1:
    external: true
