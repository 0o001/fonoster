configs:
  bootstrap:
    external: true
    name: bootstrap
  fluent:
    external: true
    name: fluent
  redis-conf:
    external: true
    name: redis-conf
networks:
  fonos: {}
secrets:
  config:
    external: true
    name: config
  jwt-salt:
    external: true
    name: jwt-salt
services:
  apiserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ALLOW_INSECURE: "true"
      DS_HOST: datasource.fonos
      DS_PORT: '6379'
      EVENTS_BROKERS: amqp://fonos:changeit@eventsbroker.fonos:5672
      FS_DEFAULT_STORAGE_BUCKET: default
      FS_HOST: fs.fonos
      FS_PORT: '9000'
      FS_SECRET: minio123
      FS_USERNAME: minio
      LOGS_DRIVER_HOST: logsdriver.fonos
      LOGS_DRIVER_PORT: '24224'
      MS_ENDPOINT: ast@sip.local
      SIPPROXY_API_PORT: '4567'
      SIPPROXY_API_SECRET: changeit
      SIPPROXY_API_USERNAME: admin
      SIPPROXY_HOST: sipproxy.fonos
    image: fonoster/fonos-apiserver:latest
    logging:
      options:
        tag: alpha.fonos.apiserver
    networks:
      fonos:
        aliases:
        - apiserver.fonos
    ports:
    - published: 50052
      target: 50052
    secrets:
    - source: config
      target: /home/fonos/.fonos/config
    - source: jwt-salt
      target: /home/fonos/.fonos/jwt.salt
  datasource:
    command:
    - redis-server
    - /etc/redis/redis.conf
    configs:
    - source: redis-conf
      target: /etc/redis/redis.conf
    deploy:
      placement:
        constraints:
        - node.role == manager
      restart_policy:
        condition: on-failure
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 10s
    image: redis:6.0.3-alpine
    logging:
      options:
        tag: alpha.fonos.datasource
    networks:
      fonos:
        aliases:
        - datasource.fonos
    ports:
    - published: 6379
      target: 6379
    volumes:
    - datasource:/data:rw
  eventsbroker:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      RABBITMQ_NODE_PORT_NUMBER: '5672'
      RABBITMQ_PASSWORD: changeit
      RABBITMQ_USERNAME: fonos
    image: bitnami/rabbitmq:latest
    logging:
      options:
        tag: alpha.fonos.eventsbroker
    networks:
      fonos:
        aliases:
        - eventsbroker.fonos
    ports:
    - published: 5672
      target: 5672
  logsaggregator:
    environment:
      discovery.type: single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    networks:
      fonos: {}
  logsdriver:
    configs:
    - source: fluent
      target: /fluentd/etc/fluent.conf
    deploy:
      mode: global
    image: fonoster/fluent-elasticsearch:latest
    networks:
      fonos:
        aliases:
        - logsdriver.fonos
    ports:
    - published: 24224
      target: 24224
  logsmonitor:
    environment:
      ELASTICSEARCH_HOSTS: http://logsaggregator:9200
    image: kibana:7.9.3
    networks:
      fonos: {}
    ports:
    - published: 5601
      target: 5601
  mediacontroller:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      APISERVER_ENDPOINT: apiserver.fonos:{APISERVER_PORT}
      APPS_DIR: /home/fonos/apps
      EVENTS_BROKERS: amqp://fonos:changeit@eventsbroker.fonos:5672
      EVENTS_QUEUE: apiserver
      LOGS_DRIVER_HOST: logsdriver.fonos
      LOGS_DRIVER_PORT: '24224'
      TTS_ENGINE_HOST: tts.fonos
      TTS_ENGINE_PORT: '59125'
    image: fonoster/fonos-nodejsmc:latest
    logging:
      options:
        tag: alpha.fonos.mediacontroller
    networks:
      fonos:
        aliases:
        - mediacontroller.fonos
    secrets:
    - source: config
      target: /home/fonos/.fonos/config
    - source: jwt-salt
      target: /home/fonos/.fonos/jwt.salt
    volumes:
    - apps:/home/fonos/apps:rw
  mediaserver:
    deploy:
      placement:
        constraints:
        - node.labels.topic == sip
      restart_policy:
        condition: on-failure
    environment:
      AGI_URL: agi://mediacontroller.fonos
      ENABLE_TEST_ACCOUNT: "true"
      EXTERN_ADDR: 142.93.178.18
      EXTERN_PORT: '6060'
      SIPPROXY_HOST: sipproxy.fonos
      SIPPROXY_SECRET: changeit
      SIPPROXY_USERNAME: ast
    image: fonoster/fonos-mediaserver:15.7.4
    logging:
      options:
        tag: alpha.fonos.mediaserver
    networks:
      fonos:
        aliases:
        - mediaserver.fonos
    ports:
    - published: 6060
      target: 6060
    - protocol: udp
      published: 30000
      target: 30000
    - protocol: udp
      published: 30001
      target: 30001
    - protocol: udp
      published: 30002
      target: 30002
    - protocol: udp
      published: 30003
      target: 30003
    - protocol: udp
      published: 30004
      target: 30004
    - protocol: udp
      published: 30005
      target: 30005
    - protocol: udp
      published: 30006
      target: 30006
    - protocol: udp
      published: 30007
      target: 30007
    - protocol: udp
      published: 30008
      target: 30008
  provisioner:
    configs:
    - source: bootstrap
      target: /bootstrap.yml
    deploy:
      restart_policy:
        condition: none
    entrypoint: '/bin/sh -c " set -e; rctl login https://sipproxy.fonos:4567/api/v1beta1
      -u admin -p changeit; rctl create -f /bootstrap.yml; exit 0; "

      '
    image: fonoster/routr-ctl
    networks:
      fonos: {}
  sipproxy:
    deploy:
      placement:
        constraints:
        - node.labels.topic == sip
      restart_policy:
        condition: on-failure
    environment:
      DATA_SOURCE_PARAMETERS: host=datasource.fonos,port=6379
      DATA_SOURCE_PROVIDER: redis_data_provider
      EXTERN_ADDR: 142.93.178.18
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD-SHELL
      - nc -z localhost 4567 || exit 1
      timeout: 30s
    image: fonoster/routr:1.0.0-rc5
    logging:
      options:
        tag: alpha.fonos.apiserver
    networks:
      fonos:
        aliases:
        - sipproxy.fonos
    ports:
    - published: 4567
      target: 4567
    - published: 5060
      target: 5060
  tts:
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:59125
      timeout: 20s
    image: synesthesiam/marytts:5.2
    logging:
      options:
        tag: alpha.fonos.tts
    networks:
      fonos:
        aliases:
        - tts.fonos
    ports:
    - published: 59125
      target: 59125
version: '3.7'
volumes:
  apps:
    external: true
    name: apps
  datasource: {}

